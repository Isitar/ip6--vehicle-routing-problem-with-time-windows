using IRuettae.Core.Models;
namespace IRuettae.Evaluator
{
internal partial class DatasetFactory
{
/// <summary>
/// 50 Visits, 2 Days, 5 Santas
/// 15 Desired, 11 Unavailable on day 0
/// 15 Desired, 11 Unavailable on day 1
/// </summary>
public static (OptimizationInput input, (int x, int y)[] coordinates) DataSet9()
{
	// Coordinates of points
	var coordinates = new[]
	{
		(3394,2362),
		(1303,19),
		(2041,3174),
		(1184,758),
		(1358,30),
		(3133,2904),
		(1688,1753),
		(1508,1598),
		(1856,749),
		(2873,1555),
		(2248,2678),
		(1270,1461),
		(1509,1014),
		(3018,3131),
		(2614,2379),
		(2618,2418),
		(3743,2910),
		(1402,1370),
		(188,3364),
		(2358,2728),
		(1783,1218),
		(3138,2442),
		(1518,959),
		(1380,760),
		(1263,593),
		(2885,2667),
		(1692,757),
		(2607,2818),
		(1197,1192),
		(3006,2518),
		(2503,2478),
		(575,893),
		(936,1243),
		(1890,1366),
		(1110,920),
		(2935,1578),
		(2465,2685),
		(1269,1008),
		(1904,1000),
		(2572,2759),
		(3070,2759),
		(1772,659),
		(1806,1595),
		(1551,432),
		(2573,3240),
		(2997,2992),
		(2827,2623),
		(1126,1178),
		(1057,1136),
		(2452,3342),
		(2154,1582)
	};
	const int workingDayDuration = 9 * Hour;
	var input = new OptimizationInput
	{
		Days = new[] {(0* Hour, 0*Hour + workingDayDuration), (24* Hour, 24*Hour + workingDayDuration) },

		RouteCosts = new[,]
		{
			{ 0, 3240, 748, 56, 3416, 1776, 1592, 915, 2196, 2821, 1442, 1016, 3553, 2699, 2735, 3783, 1354, 3525, 2907, 1291, 3039, 964, 744, 575, 3084, 834, 3087, 1177, 3024, 2736, 1137, 1277, 1469, 921, 2256, 2908, 989, 1150, 3019, 3260, 793, 1654, 481, 3462, 3421, 3017, 1172, 1143, 3516, 1779 },
			{ 3240, 0, 2563, 3217, 1124, 1464, 1663, 2432, 1820, 537, 1878, 2224, 977, 979, 951, 1722, 1913, 1862, 547, 1972, 1318, 2275, 2502, 2695, 984, 2442, 668, 2154, 1166, 835, 2711, 2224, 1814, 2438, 1829, 647, 2299, 2178, 673, 1109, 2529, 1596, 2785, 536, 973, 959, 2195, 2263, 444, 1596 },
			{ 748, 2563, 0, 748, 2898, 1115, 900, 672, 1867, 2195, 708, 413, 2999, 2161, 2193, 3343, 649, 2789, 2293, 755, 2579, 389, 196, 182, 2556, 508, 2503, 434, 2533, 2167, 623, 544, 931, 178, 1933, 2313, 264, 759, 2435, 2749, 596, 1042, 490, 2844, 2877, 2485, 423, 398, 2878, 1272 },
			{ 56, 3217, 748, 0, 3377, 1754, 1575, 874, 2149, 2793, 1433, 995, 3517, 2663, 2700, 3739, 1340, 3533, 2877, 1261, 2997, 942, 730, 570, 3047, 800, 3054, 1173, 2984, 2702, 1165, 1284, 1438, 923, 2209, 2876, 982, 1113, 2986, 3221, 753, 1627, 445, 3432, 3385, 2980, 1171, 1146, 3488, 1744 },
			{ 3416, 1124, 2898, 3377, 0, 1847, 2084, 2504, 1373, 913, 2356, 2491, 254, 738, 708, 610, 2312, 2980, 794, 2159, 462, 2528, 2769, 2972, 343, 2585, 532, 2584, 406, 760, 3253, 2754, 1977, 2833, 1340, 702, 2658, 2266, 579, 158, 2625, 1863, 2934, 653, 161, 415, 2647, 2726, 809, 1645 },
			{ 1776, 1464, 1115, 1754, 1847, 0, 237, 1017, 1201, 1081, 509, 760, 1915, 1117, 1143, 2358, 478, 2201, 1183, 543, 1605, 811, 1039, 1235, 1506, 996, 1406, 745, 1523, 1090, 1406, 908, 436, 1013, 1259, 1213, 854, 783, 1339, 1709, 1097, 197, 1328, 1730, 1802, 1433, 804, 882, 1763, 496 },
			{ 1592, 1663, 900, 1575, 2084, 237, 0, 917, 1365, 1309, 274, 584, 2151, 1353, 1380, 2591, 251, 2204, 1414, 469, 1835, 639, 847, 1034, 1743, 860, 1642, 511, 1757, 1328, 1169, 673, 446, 786, 1427, 1448, 636, 717, 1574, 1946, 975, 298, 1166, 1957, 2039, 1670, 567, 645, 1983, 646 },
			{ 915, 2432, 672, 874, 2504, 1017, 917, 0, 1297, 1968, 922, 436, 2650, 1797, 1834, 2868, 769, 3101, 2041, 474, 2123, 397, 476, 613, 2176, 164, 2201, 794, 2109, 1846, 1289, 1044, 617, 765, 1360, 2029, 641, 255, 2133, 2348, 123, 847, 439, 2592, 2516, 2110, 846, 887, 2660, 884 },
			{ 2196, 1820, 1867, 2149, 1373, 1201, 1365, 1297, 0, 1285, 1605, 1467, 1582, 863, 899, 1610, 1482, 3237, 1281, 1140, 925, 1480, 1691, 1875, 1112, 1425, 1290, 1714, 972, 994, 2391, 1961, 1001, 1873, 66, 1201, 1694, 1116, 1241, 1220, 1419, 1067, 1734, 1711, 1442, 1068, 1787, 1863, 1835, 719 },
			{ 2821, 537, 2195, 2793, 913, 1081, 1309, 1968, 1285, 0, 1561, 1820, 893, 472, 452, 1512, 1557, 2171, 120, 1532, 920, 1867, 2105, 2305, 637, 1999, 385, 1820, 774, 324, 2446, 1944, 1359, 2094, 1296, 217, 1935, 1712, 333, 825, 2074, 1169, 2351, 649, 812, 581, 1873, 1948, 694, 1100 },
			{ 1442, 1878, 708, 1433, 2356, 509, 274, 922, 1605, 1561, 0, 506, 2417, 1627, 1653, 2866, 160, 2189, 1670, 567, 2109, 559, 709, 868, 2015, 820, 1904, 278, 2032, 1598, 897, 398, 627, 564, 1669, 1710, 453, 783, 1838, 2219, 946, 552, 1066, 2205, 2307, 1942, 317, 388, 2221, 892 },
			{ 1016, 2224, 413, 995, 2491, 760, 584, 436, 1467, 1820, 506, 0, 2599, 1756, 1789, 2930, 371, 2695, 1912, 341, 2166, 55, 284, 487, 2150, 315, 2111, 359, 2122, 1769, 941, 617, 518, 409, 1533, 1925, 240, 395, 2043, 2341, 441, 652, 583, 2467, 2475, 2079, 416, 468, 2511, 859 },
			{ 3553, 977, 2999, 3517, 254, 1915, 2151, 2650, 1582, 893, 2417, 2599, 0, 853, 817, 757, 2390, 2839, 773, 2277, 699, 2639, 2881, 3085, 482, 2719, 516, 2660, 613, 831, 3313, 2810, 2094, 2920, 1555, 710, 2750, 2404, 580, 375, 2768, 1956, 3071, 458, 140, 542, 2719, 2797, 604, 1773 },
			{ 2699, 979, 2161, 2663, 738, 1117, 1353, 1797, 863, 472, 1627, 1756, 853, 0, 39, 1247, 1577, 2618, 432, 1427, 527, 1793, 2035, 2239, 395, 1865, 439, 1848, 415, 148, 2523, 2026, 1245, 2095, 862, 340, 1920, 1551, 382, 593, 1915, 1125, 2218, 861, 722, 323, 1912, 1992, 976, 920 },
			{ 2735, 951, 2193, 2700, 708, 1143, 1380, 1834, 899, 452, 1653, 1789, 817, 39, 0, 1227, 1605, 2607, 404, 1461, 520, 1827, 2069, 2273, 365, 1901, 400, 1876, 400, 129, 2549, 2051, 1279, 2125, 897, 307, 1951, 1587, 344, 566, 1951, 1156, 2254, 823, 687, 292, 1940, 2019, 938, 956 },
			{ 3783, 1722, 3343, 3739, 610, 2358, 2591, 2868, 1610, 1512, 2866, 2930, 757, 1247, 1227, 0, 2802, 3583, 1396, 2589, 764, 2959, 3194, 3393, 891, 2973, 1139, 3071, 834, 1313, 3755, 3264, 2411, 3300, 1557, 1297, 3120, 2651, 1180, 689, 2991, 2341, 3308, 1215, 750, 959, 3138, 3218, 1361, 2070 },
			{ 1354, 1913, 649, 1340, 2312, 478, 251, 769, 1482, 1557, 160, 371, 2390, 1577, 1605, 2802, 0, 2334, 1660, 410, 2040, 427, 610, 789, 1970, 678, 1883, 271, 1972, 1562, 954, 482, 488, 536, 1547, 1690, 385, 623, 1816, 2170, 801, 462, 949, 2206, 2274, 1897, 336, 416, 2234, 781 },
			{ 3525, 1862, 2789, 3533, 2980, 2201, 2204, 3101, 3237, 2171, 2189, 2695, 2839, 2618, 2607, 3583, 2334, 0, 2261, 2673, 3090, 2748, 2863, 2972, 2785, 3009, 2479, 2394, 2942, 2478, 2501, 2249, 2624, 2612, 3276, 2376, 2592, 2921, 2459, 2944, 3134, 2397, 3233, 2388, 2833, 2741, 2378, 2391, 2264, 2653 },
			{ 2907, 547, 2293, 2877, 794, 1183, 1414, 2041, 1281, 120, 1670, 1912, 773, 432, 404, 1396, 1660, 2261, 0, 1615, 830, 1958, 2197, 2399, 530, 2080, 264, 1925, 681, 289, 2558, 2056, 1440, 2196, 1286, 115, 2035, 1786, 216, 712, 2150, 1260, 2433, 555, 691, 480, 1979, 2055, 621, 1164 },
			{ 1291, 1972, 755, 1261, 2159, 543, 469, 474, 1140, 1532, 567, 341, 2277, 1427, 1461, 2589, 410, 2673, 1615, 0, 1825, 370, 610, 813, 1820, 469, 1799, 586, 1784, 1451, 1250, 847, 182, 736, 1206, 1617, 555, 249, 1731, 2007, 559, 377, 819, 2170, 2149, 1750, 658, 730, 2226, 519 },
			{ 3039, 1318, 2579, 2997, 462, 1605, 1835, 2123, 925, 920, 2109, 2166, 699, 527, 520, 764, 2040, 3090, 830, 1825, 0, 2196, 2433, 2633, 338, 2220, 650, 2308, 152, 636, 2994, 2507, 1647, 2535, 887, 715, 2355, 1897, 648, 324, 2246, 1578, 2560, 977, 567, 359, 2376, 2456, 1131, 1306 },
			{ 964, 2275, 389, 942, 2528, 811, 639, 397, 1480, 1867, 559, 55, 2639, 1793, 1827, 2959, 427, 2748, 1958, 370, 2196, 0, 242, 446, 2187, 266, 2154, 396, 2155, 1810, 945, 647, 551, 409, 1546, 1968, 253, 388, 2085, 2376, 393, 698, 528, 2513, 2514, 2117, 449, 493, 2559, 890 },
			{ 744, 2502, 196, 730, 2769, 1039, 847, 476, 1691, 2105, 709, 284, 2881, 2035, 2069, 3194, 610, 2863, 2197, 610, 2433, 242, 0, 203, 2429, 312, 2396, 469, 2394, 2052, 815, 656, 792, 313, 1757, 2209, 271, 576, 2327, 2617, 404, 937, 369, 2752, 2756, 2358, 489, 495, 2795, 1129 },
			{ 575, 2695, 182, 570, 2972, 1235, 1034, 613, 1875, 2305, 868, 487, 3085, 2239, 2273, 3393, 789, 2972, 2399, 813, 2633, 446, 203, 0, 2632, 459, 2599, 602, 2596, 2256, 750, 727, 995, 361, 1940, 2412, 415, 759, 2530, 2820, 513, 1139, 329, 2953, 2960, 2562, 600, 580, 2995, 1331 },
			{ 3084, 984, 2556, 3047, 343, 1506, 1743, 2176, 1112, 637, 2015, 2150, 482, 395, 365, 891, 1970, 2785, 530, 1820, 338, 2187, 2429, 2632, 0, 2251, 316, 2241, 191, 426, 2912, 2413, 1637, 2490, 1090, 420, 2315, 1934, 326, 206, 2295, 1520, 2602, 652, 343, 72, 2304, 2384, 801, 1308 },
			{ 834, 2442, 508, 800, 2585, 996, 860, 164, 1425, 1999, 820, 315, 2719, 1865, 1901, 2973, 678, 3009, 2080, 469, 2220, 266, 312, 459, 2251, 0, 2254, 658, 2197, 1902, 1125, 898, 640, 604, 1489, 2077, 491, 322, 2186, 2430, 126, 845, 354, 2634, 2588, 2184, 705, 739, 2694, 945 },
			{ 3087, 668, 2503, 3054, 532, 1406, 1642, 2201, 1290, 385, 1904, 2111, 516, 439, 400, 1139, 1883, 2479, 264, 1799, 650, 2154, 2396, 2599, 316, 2254, 0, 2152, 499, 355, 2799, 2296, 1619, 2417, 1282, 194, 2250, 1949, 68, 466, 2314, 1461, 2609, 423, 427, 293, 2209, 2287, 546, 1316 },
			{ 1177, 2154, 434, 1173, 2584, 745, 511, 794, 1714, 1820, 278, 359, 2660, 1848, 1876, 3071, 271, 2394, 1925, 586, 2308, 396, 469, 602, 2241, 658, 2152, 0, 2242, 1832, 690, 265, 714, 285, 1780, 1958, 197, 732, 2084, 2442, 784, 730, 838, 2467, 2545, 2169, 72, 150, 2489, 1033 },
			{ 3024, 1166, 2533, 2984, 406, 1523, 1757, 2109, 972, 774, 2032, 2122, 613, 415, 400, 834, 1972, 2942, 681, 1784, 152, 2155, 2394, 2596, 191, 2197, 499, 2242, 0, 504, 2924, 2431, 1603, 2479, 942, 566, 2301, 1875, 496, 249, 2231, 1513, 2543, 841, 474, 207, 2308, 2389, 992, 1265 },
			{ 2736, 835, 2167, 2702, 760, 1090, 1328, 1846, 994, 324, 1598, 1769, 831, 148, 129, 1313, 1562, 2478, 289, 1451, 636, 1810, 2052, 2256, 426, 1902, 355, 1832, 504, 0, 2495, 1995, 1269, 2089, 998, 210, 1919, 1594, 289, 632, 1960, 1124, 2256, 765, 712, 354, 1893, 1972, 865, 961 },
			{ 1137, 2711, 623, 1165, 3253, 1406, 1169, 1289, 2391, 2446, 897, 941, 3313, 2523, 2549, 3755, 954, 2501, 2558, 1250, 2994, 945, 815, 750, 2912, 1125, 2799, 690, 2924, 2495, 0, 502, 1397, 535, 2457, 2604, 703, 1333, 2733, 3115, 1219, 1417, 1079, 3082, 3204, 2839, 620, 539, 3085, 1722 },
			{ 1277, 2224, 544, 1284, 2754, 908, 673, 1044, 1961, 1944, 398, 617, 2810, 2026, 2051, 3264, 482, 2249, 2056, 847, 2507, 647, 656, 727, 2413, 898, 2296, 265, 2431, 1995, 502, 0, 961, 366, 2026, 2101, 407, 998, 2230, 2617, 1019, 938, 1017, 2582, 2703, 2341, 200, 161, 2589, 1264 },
			{ 1469, 1814, 931, 1438, 1977, 436, 446, 617, 1001, 1359, 627, 518, 2094, 1245, 1279, 2411, 488, 2624, 1440, 182, 1647, 551, 792, 995, 1637, 640, 1619, 714, 1603, 1269, 1397, 961, 0, 898, 1066, 1438, 716, 366, 1550, 1825, 716, 243, 993, 1994, 1967, 1567, 786, 864, 2054, 341 },
			{ 921, 2438, 178, 923, 2833, 1013, 786, 765, 1873, 2094, 564, 409, 2920, 2095, 2125, 3300, 536, 2612, 2196, 736, 2535, 409, 313, 361, 2490, 604, 2417, 285, 2479, 2089, 535, 366, 898, 0, 1939, 2225, 181, 798, 2349, 2687, 711, 969, 657, 2742, 2802, 2418, 258, 222, 2768, 1236 },
			{ 2256, 1829, 1933, 2209, 1340, 1259, 1427, 1360, 66, 1296, 1669, 1533, 1555, 862, 897, 1557, 1547, 3276, 1286, 1206, 887, 1546, 1757, 1940, 1090, 1489, 1282, 1780, 942, 998, 2457, 2026, 1066, 1939, 0, 1202, 1760, 1181, 1235, 1188, 1482, 1129, 1796, 1700, 1415, 1050, 1852, 1929, 1828, 781 },
			{ 2908, 647, 2313, 2876, 702, 1213, 1448, 2029, 1201, 217, 1710, 1925, 710, 340, 307, 1297, 1690, 2376, 115, 1617, 715, 1968, 2209, 2412, 420, 2077, 194, 1958, 566, 210, 2604, 2101, 1438, 2225, 1202, 0, 2059, 1775, 130, 609, 2141, 1273, 2431, 565, 614, 367, 2015, 2093, 657, 1146 },
			{ 989, 2299, 264, 982, 2658, 854, 636, 641, 1694, 1935, 453, 240, 2750, 1920, 1951, 3120, 385, 2592, 2035, 555, 2355, 253, 271, 415, 2315, 491, 2250, 197, 2301, 1919, 703, 407, 716, 181, 1760, 2059, 0, 635, 2182, 2511, 612, 795, 641, 2585, 2631, 2244, 222, 247, 2616, 1054 },
			{ 1150, 2178, 759, 1113, 2266, 783, 717, 255, 1116, 1712, 783, 395, 2404, 1551, 1587, 2651, 623, 2921, 1786, 249, 1897, 388, 576, 759, 1934, 322, 1949, 732, 1875, 1594, 1333, 998, 366, 798, 1181, 1775, 635, 0, 1881, 2110, 365, 603, 668, 2337, 2272, 1867, 798, 857, 2405, 633 },
			{ 3019, 673, 2435, 2986, 579, 1339, 1574, 2133, 1241, 333, 1838, 2043, 580, 382, 344, 1180, 1816, 2459, 216, 1731, 648, 2085, 2327, 2530, 326, 2186, 68, 2084, 496, 289, 2733, 2230, 1550, 2349, 1235, 130, 2182, 1881, 0, 498, 2247, 1393, 2541, 481, 484, 289, 2142, 2220, 595, 1249 },
			{ 3260, 1109, 2749, 3221, 158, 1709, 1946, 2348, 1220, 825, 2219, 2341, 375, 593, 566, 689, 2170, 2944, 712, 2007, 324, 2376, 2617, 2820, 206, 2430, 466, 2442, 249, 632, 3115, 2617, 1825, 2687, 1188, 609, 2511, 2110, 498, 0, 2468, 1718, 2778, 691, 244, 278, 2505, 2585, 849, 1491 },
			{ 793, 2529, 596, 753, 2625, 1097, 975, 123, 1419, 2074, 946, 441, 2768, 1915, 1951, 2991, 801, 3134, 2150, 559, 2246, 393, 404, 513, 2295, 126, 2314, 784, 2231, 1960, 1219, 1019, 716, 711, 1482, 2141, 612, 365, 2247, 2468, 0, 936, 316, 2702, 2635, 2229, 828, 859, 2767, 998 },
			{ 1654, 1596, 1042, 1627, 1863, 197, 298, 847, 1067, 1169, 552, 652, 1956, 1125, 1156, 2341, 462, 2397, 1260, 377, 1578, 698, 937, 1139, 1520, 845, 1461, 730, 1513, 1124, 1417, 938, 243, 969, 1129, 1273, 795, 603, 1393, 1718, 936, 0, 1190, 1815, 1835, 1448, 797, 878, 1862, 348 },
			{ 481, 2785, 490, 445, 2934, 1328, 1166, 439, 1734, 2351, 1066, 583, 3071, 2218, 2254, 3308, 949, 3233, 2433, 819, 2560, 528, 369, 329, 2602, 354, 2609, 838, 2543, 2256, 1079, 1017, 993, 657, 1796, 2431, 641, 668, 2541, 2778, 316, 1190, 0, 2988, 2940, 2535, 858, 860, 3046, 1298 },
			{ 3462, 536, 2844, 3432, 653, 1730, 1957, 2592, 1711, 649, 2205, 2467, 458, 861, 823, 1215, 2206, 2388, 555, 2170, 977, 2513, 2752, 2953, 652, 2634, 423, 2467, 841, 765, 3082, 2582, 1994, 2742, 1700, 565, 2585, 2337, 481, 691, 2702, 1815, 2988, 0, 491, 667, 2519, 2593, 158, 1710 },
			{ 3421, 973, 2877, 3385, 161, 1802, 2039, 2516, 1442, 812, 2307, 2475, 140, 722, 687, 750, 2274, 2833, 691, 2149, 567, 2514, 2756, 2960, 343, 2588, 427, 2545, 474, 712, 3204, 2703, 1967, 2802, 1415, 614, 2631, 2272, 484, 244, 2635, 1835, 2940, 491, 0, 406, 2606, 2684, 647, 1642 },
			{ 3017, 959, 2485, 2980, 415, 1433, 1670, 2110, 1068, 581, 1942, 2079, 542, 323, 292, 959, 1897, 2741, 480, 1750, 359, 2117, 2358, 2562, 72, 2184, 293, 2169, 207, 354, 2839, 2341, 1567, 2418, 1050, 367, 2244, 1867, 289, 278, 2229, 1448, 2535, 667, 406, 0, 2231, 2311, 810, 1239 },
			{ 1172, 2195, 423, 1171, 2647, 804, 567, 846, 1787, 1873, 317, 416, 2719, 1912, 1940, 3138, 336, 2378, 1979, 658, 2376, 449, 489, 600, 2304, 705, 2209, 72, 2308, 1893, 620, 200, 786, 258, 1852, 2015, 222, 798, 2142, 2505, 828, 797, 858, 2519, 2606, 2231, 0, 80, 2537, 1104 },
			{ 1143, 2263, 398, 1146, 2726, 882, 645, 887, 1863, 1948, 388, 468, 2797, 1992, 2019, 3218, 416, 2391, 2055, 730, 2456, 493, 495, 580, 2384, 739, 2287, 150, 2389, 1972, 539, 161, 864, 222, 1929, 2093, 247, 857, 2220, 2585, 859, 878, 860, 2593, 2684, 2311, 80, 0, 2610, 1184 },
			{ 3516, 444, 2878, 3488, 809, 1763, 1983, 2660, 1835, 694, 2221, 2511, 604, 976, 938, 1361, 2234, 2264, 621, 2226, 1131, 2559, 2795, 2995, 801, 2694, 546, 2489, 992, 865, 3085, 2589, 2054, 2768, 1828, 657, 2616, 2405, 595, 849, 2767, 1862, 3046, 158, 647, 810, 2537, 2610, 0, 1785 },
			{ 1779, 1596, 1272, 1744, 1645, 496, 646, 884, 719, 1100, 892, 859, 1773, 920, 956, 2070, 781, 2653, 1164, 519, 1306, 890, 1129, 1331, 1308, 945, 1316, 1033, 1265, 961, 1722, 1264, 341, 1236, 781, 1146, 1054, 633, 1249, 1491, 998, 348, 1298, 1710, 1642, 1239, 1104, 1184, 1785, 0 }
		},

		Santas = new[]
		{
			new Santa { Id = 0 },
			new Santa { Id = 1 },
			new Santa { Id = 2 },
			new Santa { Id = 3 },
			new Santa { Id = 4 }
		},

		Visits = new[]
		{
			new Visit{Duration = 2888, Id=0,WayCostFromHome=3140, WayCostToHome=3140,Unavailable =new [] {(24 * Hour + 7226, (24 * Hour + 7226) + 2895)},Desired = new [] {(0 * Hour + 9766, (0 * Hour + 9766) + 11744)}},
			new Visit{Duration = 2583, Id=1,WayCostFromHome=1577, WayCostToHome=1577,Unavailable =new [] {(24 * Hour + 4533, (24 * Hour + 4533) + 21186)},Desired = new [] {(0 * Hour + 836, (0 * Hour + 836) + 13129)}},
			new Visit{Duration = 1987, Id=2,WayCostFromHome=2730, WayCostToHome=2730,Unavailable =new [] {(24 * Hour + 939, (24 * Hour + 939) + 13428)},Desired = new [] {(0 * Hour + 6939, (0 * Hour + 6939) + 20333)}},
			new Visit{Duration = 1903, Id=3,WayCostFromHome=3095, WayCostToHome=3095,Unavailable =new [] {(24 * Hour + 7893, (24 * Hour + 7893) + 20474)},Desired = new [] {(0 * Hour + 14364, (0 * Hour + 14364) + 4468)}},
			new Visit{Duration = 1447, Id=4,WayCostFromHome=601, WayCostToHome=601,Unavailable =new [] {(24 * Hour + 7173, (24 * Hour + 7173) + 16698)},Desired = new [] {(0 * Hour + 13045, (0 * Hour + 13045) + 16726)}},
			new Visit{Duration = 2697, Id=5,WayCostFromHome=1811, WayCostToHome=1811,Unavailable =new [] {(24 * Hour + 15559, (24 * Hour + 15559) + 14240)},Desired = new [] {(0 * Hour + 11542, (0 * Hour + 11542) + 20538)}},
			new Visit{Duration = 1717, Id=6,WayCostFromHome=2034, WayCostToHome=2034,Unavailable =new [] {(24 * Hour + 189, (24 * Hour + 189) + 32209)},Desired = new [] {(0 * Hour + 11284, (0 * Hour + 11284) + 18179)}},
			new Visit{Duration = 1466, Id=7,WayCostFromHome=2228, WayCostToHome=2228,Unavailable =new [] {(24 * Hour + 615, (24 * Hour + 615) + 31271)},Desired = new [] {(0 * Hour + 1789, (0 * Hour + 1789) + 9627)}},
			new Visit{Duration = 2543, Id=8,WayCostFromHome=960, WayCostToHome=960,Unavailable =new [] {(24 * Hour + 5209, (24 * Hour + 5209) + 21236)},Desired = new [] {(0 * Hour + 9414, (0 * Hour + 9414) + 6992)}},
			new Visit{Duration = 2284, Id=9,WayCostFromHome=1188, WayCostToHome=1188,Unavailable =new [] {(24 * Hour + 17916, (24 * Hour + 17916) + 9195)},Desired = new [] {(0 * Hour + 1374, (0 * Hour + 1374) + 16448)}},
			new Visit{Duration = 3282, Id=10,WayCostFromHome=2307, WayCostToHome=2307,Unavailable =new [] {(24 * Hour + 3826, (24 * Hour + 3826) + 20230)},Desired = new [] {(0 * Hour + 9857, (0 * Hour + 9857) + 18715)}},
			new Visit{Duration = 1621, Id=11,WayCostFromHome=2317, WayCostToHome=2317,Unavailable =new (int from, int to)[0],Desired = new [] {(0 * Hour + 7624, (0 * Hour + 7624) + 21431)}},
			new Visit{Duration = 2603, Id=12,WayCostFromHome=856, WayCostToHome=856,Unavailable =new (int from, int to)[0],Desired = new [] {(0 * Hour + 9128, (0 * Hour + 9128) + 20152)}},
			new Visit{Duration = 2860, Id=13,WayCostFromHome=780, WayCostToHome=780,Unavailable =new (int from, int to)[0],Desired = new [] {(0 * Hour + 8063, (0 * Hour + 8063) + 8831)}},
			new Visit{Duration = 2134, Id=14,WayCostFromHome=778, WayCostToHome=778,Unavailable =new (int from, int to)[0],Desired = new [] {(0 * Hour + 7459, (0 * Hour + 7459) + 18224)}},
			new Visit{Duration = 1859, Id=15,WayCostFromHome=649, WayCostToHome=649,Unavailable =new [] {(0 * Hour + 1660, (0 * Hour + 1660) + 27326)},Desired = new [] {(24 * Hour + 148, (24 * Hour + 148) + 31260)}},
			new Visit{Duration = 3220, Id=16,WayCostFromHome=2225, WayCostToHome=2225,Unavailable =new [] {(0 * Hour + 4767, (0 * Hour + 4767) + 23891)},Desired = new [] {(24 * Hour + 3835, (24 * Hour + 3835) + 5677)}},
			new Visit{Duration = 2932, Id=17,WayCostFromHome=3358, WayCostToHome=3358,Unavailable =new [] {(0 * Hour + 13291, (0 * Hour + 13291) + 7069)},Desired = new [] {(24 * Hour + 17790, (24 * Hour + 17790) + 4394)}},
			new Visit{Duration = 1496, Id=18,WayCostFromHome=1098, WayCostToHome=1098,Unavailable =new [] {(0 * Hour + 2195, (0 * Hour + 2195) + 29325)},Desired = new [] {(24 * Hour + 9983, (24 * Hour + 9983) + 20395)}},
			new Visit{Duration = 2925, Id=19,WayCostFromHome=1975, WayCostToHome=1975,Unavailable =new [] {(0 * Hour + 9712, (0 * Hour + 9712) + 8569)},Desired = new [] {(24 * Hour + 470, (24 * Hour + 470) + 29104)}},
			new Visit{Duration = 2480, Id=20,WayCostFromHome=268, WayCostToHome=268,Unavailable =new [] {(0 * Hour + 1929, (0 * Hour + 1929) + 30210)},Desired = new [] {(24 * Hour + 8566, (24 * Hour + 8566) + 20515)}},
			new Visit{Duration = 2992, Id=21,WayCostFromHome=2342, WayCostToHome=2342,Unavailable =new [] {(0 * Hour + 19471, (0 * Hour + 19471) + 9261)},Desired = new [] {(24 * Hour + 1330, (24 * Hour + 1330) + 14490)}},
			new Visit{Duration = 1680, Id=22,WayCostFromHome=2573, WayCostToHome=2573,Unavailable =new [] {(0 * Hour + 6042, (0 * Hour + 6042) + 25845)},Desired = new [] {(24 * Hour + 6075, (24 * Hour + 6075) + 7963)}},
			new Visit{Duration = 2957, Id=23,WayCostFromHome=2769, WayCostToHome=2769,Unavailable =new [] {(0 * Hour + 246, (0 * Hour + 246) + 20094)},Desired = new [] {(24 * Hour + 5834, (24 * Hour + 5834) + 19061)}},
			new Visit{Duration = 3351, Id=24,WayCostFromHome=593, WayCostToHome=593,Unavailable =new [] {(0 * Hour + 5864, (0 * Hour + 5864) + 14459)},Desired = new [] {(24 * Hour + 4025, (24 * Hour + 4025) + 18941)}},
			new Visit{Duration = 2827, Id=25,WayCostFromHome=2339, WayCostToHome=2339,Unavailable =new [] {(0 * Hour + 7344, (0 * Hour + 7344) + 24193)},Desired = new [] {(24 * Hour + 12317, (24 * Hour + 12317) + 13997)}},
			new Visit{Duration = 3599, Id=26,WayCostFromHome=909, WayCostToHome=909,Unavailable =new (int from, int to)[0],Desired = new [] {(24 * Hour + 694, (24 * Hour + 694) + 20301)}},
			new Visit{Duration = 1836, Id=27,WayCostFromHome=2489, WayCostToHome=2489,Unavailable =new (int from, int to)[0],Desired = new [] {(24 * Hour + 7375, (24 * Hour + 7375) + 23319)}},
			new Visit{Duration = 1668, Id=28,WayCostFromHome=418, WayCostToHome=418,Unavailable =new (int from, int to)[0],Desired = new [] {(24 * Hour + 5527, (24 * Hour + 5527) + 26087)}},
			new Visit{Duration = 1377, Id=29,WayCostFromHome=898, WayCostToHome=898,Unavailable =new (int from, int to)[0],Desired = new [] {(24 * Hour + 265, (24 * Hour + 265) + 27965)}},
			new Visit{Duration = 1345, Id=30,WayCostFromHome=3178, WayCostToHome=3178,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2470, Id=31,WayCostFromHome=2700, WayCostToHome=2700,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2805, Id=32,WayCostFromHome=1803, WayCostToHome=1803,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2200, Id=33,WayCostFromHome=2701, WayCostToHome=2701,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1643, Id=34,WayCostFromHome=908, WayCostToHome=908,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 3230, Id=35,WayCostFromHome=983, WayCostToHome=983,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 3301, Id=36,WayCostFromHome=2519, WayCostToHome=2519,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 3155, Id=37,WayCostFromHome=2018, WayCostToHome=2018,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1465, Id=38,WayCostFromHome=912, WayCostToHome=912,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 3552, Id=39,WayCostFromHome=512, WayCostToHome=512,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1813, Id=40,WayCostFromHome=2351, WayCostToHome=2351,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1984, Id=41,WayCostFromHome=1763, WayCostToHome=1763,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2977, Id=42,WayCostFromHome=2668, WayCostToHome=2668,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1653, Id=43,WayCostFromHome=1202, WayCostToHome=1202,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 3590, Id=44,WayCostFromHome=744, WayCostToHome=744,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 3539, Id=45,WayCostFromHome=624, WayCostToHome=624,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2739, Id=46,WayCostFromHome=2558, WayCostToHome=2558,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2507, Id=47,WayCostFromHome=2639, WayCostToHome=2639,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2194, Id=48,WayCostFromHome=1359, WayCostToHome=1359,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2557, Id=49,WayCostFromHome=1464, WayCostToHome=1464,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]}
		}
	};
	return (input, coordinates);
}
}
}
