using IRuettae.Core.Models;
namespace IRuettae.Evaluator
{
internal partial class DatasetFactory
{
/// <summary>
/// 50 Visits, 2 Days, 5 Santas
/// 15 Desired, 11 Unavailable on day 0
/// 15 Desired, 11 Unavailable on day 1
/// </summary>
public static (OptimizationInput input, (int x, int y)[] coordinates) DataSet9()
{
	// Coordinates of points
	var coordinates = new[]
	{
		(2671,2322),
		(3170,2868),
		(3134,3491),
		(3339,2971),
		(1829,1482),
		(1438,1750),
		(1207,1349),
		(919,1648),
		(2895,2072),
		(1967,2282),
		(1328,652),
		(2565,3085),
		(1352,1469),
		(2279,2338),
		(2137,2038),
		(2878,2140),
		(2344,3436),
		(2872,2688),
		(1600,1225),
		(1104,1477),
		(1685,970),
		(1345,1495),
		(2593,3113),
		(1792,604),
		(3021,3132),
		(1279,1120),
		(1403,1333),
		(909,1880),
		(1434,1719),
		(1283,1191),
		(1144,1231),
		(1714,1566),
		(3102,3282),
		(1534,2098),
		(2713,2478),
		(1524,1582),
		(1347,3737),
		(3100,2626),
		(2553,2542),
		(448,1803),
		(1454,1176),
		(1832,3604),
		(1726,2110),
		(3175,3428),
		(2379,2320),
		(2608,2353),
		(1073,2300),
		(3037,3202),
		(2180,2075),
		(3209,2794),
		(3391,3983)
	};
	const int workingDayDuration = 9 * Hour;
	var input = new OptimizationInput
	{
		Days = new[] {(0* Hour, 0*Hour + workingDayDuration), (24* Hour, 24*Hour + workingDayDuration) },

		RouteCosts = new[,]
		{
			{ 0, 624, 197, 1928, 2061, 2482, 2560, 842, 1338, 2881, 642, 2293, 1036, 1325, 784, 1002, 348, 2272, 2490, 2409, 2283, 626, 2650, 303, 2575, 2340, 2467, 2081, 2524, 2604, 1953, 419, 1808, 600, 2088, 2019, 251, 697, 2922, 2409, 1527, 1630, 560, 962, 762, 2172, 359, 1268, 83, 1136 },
			{ 624, 0, 558, 2395, 2430, 2881, 2881, 1438, 1680, 3364, 698, 2695, 1435, 1762, 1375, 791, 844, 2736, 2859, 2907, 2680, 659, 3183, 376, 3010, 2766, 2746, 2455, 2952, 3011, 2392, 211, 2121, 1097, 2497, 1803, 865, 1112, 3172, 2860, 1306, 1972, 75, 1393, 1253, 2380, 304, 1707, 701, 555 },
			{ 197, 558, 0, 2120, 2259, 2678, 2758, 1002, 1535, 3069, 782, 2490, 1234, 1521, 950, 1098, 546, 2464, 2688, 2596, 2480, 759, 2827, 356, 2769, 2535, 2663, 2279, 2719, 2801, 2148, 391, 2005, 796, 2285, 2134, 419, 895, 3118, 2602, 1634, 1828, 485, 1159, 957, 2363, 380, 1464, 219, 1013 },
			{ 1928, 2395, 2120, 0, 474, 636, 925, 1218, 811, 969, 1763, 477, 967, 635, 1238, 2020, 1594, 344, 725, 531, 484, 1801, 878, 2035, 658, 451, 1002, 460, 618, 729, 142, 2204, 682, 1331, 320, 2305, 1710, 1283, 1417, 484, 2122, 636, 2366, 1002, 1168, 1113, 2101, 689, 1904, 2948 },
			{ 2061, 2430, 2259, 474, 0, 462, 528, 1492, 750, 1103, 1747, 293, 1026, 756, 1491, 1914, 1713, 549, 431, 818, 271, 1786, 1199, 2101, 649, 418, 544, 31, 580, 596, 331, 2261, 360, 1468, 188, 1989, 1878, 1367, 991, 574, 1895, 461, 2415, 1100, 1316, 660, 2159, 810, 2055, 2966 },
			{ 2482, 2881, 2678, 636, 462, 0, 415, 1836, 1203, 707, 2204, 188, 1458, 1157, 1848, 2376, 2136, 412, 164, 610, 200, 2243, 947, 2543, 240, 196, 608, 434, 175, 133, 551, 2706, 817, 1882, 393, 2392, 2283, 1798, 884, 301, 2340, 921, 2862, 1521, 1723, 960, 2604, 1214, 2469, 3421 },
			{ 2560, 2881, 2758, 925, 528, 415, 0, 2020, 1224, 1076, 2185, 468, 1525, 1278, 2019, 2286, 2212, 801, 251, 1022, 452, 2224, 1360, 2573, 639, 577, 232, 519, 584, 473, 799, 2726, 762, 1976, 608, 2132, 2390, 1862, 495, 713, 2158, 929, 2873, 1607, 1830, 669, 2626, 1331, 2560, 3400 },
			{ 842, 1438, 1002, 1218, 1492, 1836, 2020, 0, 951, 2114, 1065, 1656, 670, 758, 70, 1471, 616, 1547, 1887, 1636, 1653, 1083, 1836, 1067, 1875, 1664, 1995, 1503, 1837, 1942, 1284, 1227, 1361, 444, 1455, 2273, 590, 581, 2461, 1696, 1864, 1169, 1384, 572, 401, 1836, 1138, 715, 787, 1974 },
			{ 1338, 1680, 1535, 811, 750, 1203, 1224, 951, 0, 1750, 1001, 1019, 316, 297, 922, 1214, 991, 1118, 1180, 1341, 1003, 1040, 1687, 1354, 1350, 1103, 1131, 775, 1287, 1334, 759, 1512, 470, 771, 828, 1581, 1184, 641, 1592, 1219, 1328, 296, 1665, 413, 644, 894, 1411, 297, 1343, 2218 },
			{ 2881, 3364, 3069, 969, 1103, 707, 1076, 2114, 1750, 0, 2729, 817, 1935, 1604, 2148, 2963, 2555, 634, 854, 478, 843, 2767, 466, 3002, 470, 685, 1297, 1072, 540, 607, 992, 3172, 1460, 2291, 950, 3085, 2652, 2252, 1448, 538, 2994, 1511, 3334, 1971, 2128, 1667, 3069, 1658, 2850, 3918 },
			{ 642, 698, 782, 1763, 1747, 2204, 2185, 1065, 1001, 2729, 0, 2020, 799, 1131, 995, 414, 501, 2095, 2172, 2290, 2004, 39, 2598, 458, 2348, 2102, 2048, 1773, 2287, 2335, 1741, 571, 1427, 624, 1828, 1381, 704, 543, 2474, 2208, 898, 1286, 699, 787, 733, 1685, 486, 1080, 706, 1220 },
			{ 2293, 2695, 2490, 477, 293, 188, 468, 1656, 1019, 817, 2020, 0, 1270, 969, 1667, 2202, 1948, 347, 248, 599, 26, 2059, 970, 2356, 356, 145, 604, 263, 286, 316, 374, 2519, 654, 1694, 205, 2268, 2096, 1610, 963, 310, 2188, 742, 2676, 1333, 1535, 876, 2417, 1026, 2281, 3236 },
			{ 1036, 1435, 1234, 967, 1026, 1458, 1525, 670, 316, 1935, 799, 1270, 0, 331, 630, 1099, 688, 1303, 1456, 1491, 1258, 836, 1801, 1086, 1575, 1333, 1444, 1047, 1519, 1585, 956, 1252, 782, 456, 1068, 1681, 870, 341, 1907, 1425, 1342, 598, 1410, 101, 329, 1206, 1149, 281, 1035, 1985 },
			{ 1325, 1762, 1521, 635, 756, 1157, 1278, 758, 297, 1604, 1131, 969, 331, 0, 747, 1413, 981, 974, 1175, 1159, 960, 1167, 1474, 1406, 1256, 1017, 1238, 771, 1202, 1279, 633, 1574, 605, 724, 764, 1873, 1128, 653, 1705, 1099, 1595, 417, 1734, 371, 566, 1095, 1471, 56, 1311, 2314 },
			{ 784, 1375, 950, 1238, 1491, 1848, 2019, 70, 922, 2148, 995, 1667, 630, 747, 0, 1401, 548, 1571, 1893, 1670, 1663, 1013, 1881, 1002, 1896, 1681, 1986, 1504, 1855, 1957, 1297, 1163, 1344, 376, 1464, 2212, 534, 516, 2453, 1719, 1799, 1152, 1321, 530, 343, 1812, 1073, 701, 732, 1913 },
			{ 1002, 791, 1098, 2020, 1914, 2376, 2286, 1471, 1214, 2963, 414, 2202, 1099, 1413, 1401, 0, 915, 2332, 2318, 2552, 2182, 407, 2885, 742, 2549, 2303, 2116, 1943, 2483, 2510, 1973, 773, 1564, 1026, 2027, 1041, 1107, 918, 2502, 2428, 538, 1462, 831, 1116, 1114, 1704, 731, 1370, 1077, 1181 },
			{ 348, 844, 546, 1594, 1713, 2136, 2212, 616, 991, 2555, 501, 1948, 688, 981, 548, 915, 0, 1938, 2142, 2088, 1937, 508, 2347, 468, 2235, 1998, 2122, 1734, 2183, 2260, 1612, 636, 1462, 263, 1743, 1850, 236, 350, 2580, 2072, 1385, 1283, 799, 615, 426, 1840, 539, 924, 353, 1395 },
			{ 2272, 2736, 2464, 344, 549, 412, 801, 1547, 1118, 634, 2095, 347, 1303, 974, 1571, 2332, 1938, 0, 556, 268, 371, 2133, 650, 2378, 337, 224, 952, 521, 318, 456, 359, 2547, 875, 1675, 365, 2524, 2052, 1625, 1288, 154, 2390, 893, 2708, 1343, 1512, 1197, 2444, 1029, 2247, 3288 },
			{ 2490, 2859, 2688, 725, 431, 164, 251, 1887, 1180, 854, 2172, 248, 1456, 1175, 1893, 2318, 2142, 556, 0, 771, 241, 2212, 1111, 2532, 397, 331, 447, 409, 337, 249, 616, 2692, 755, 1894, 432, 2273, 2303, 1798, 732, 461, 2248, 887, 2845, 1528, 1740, 823, 2590, 1231, 2483, 3392 },
			{ 2409, 2907, 2596, 531, 818, 610, 1022, 1636, 1341, 478, 2290, 599, 1491, 1159, 1670, 2552, 2088, 268, 771, 0, 625, 2327, 381, 2541, 432, 459, 1195, 789, 458, 600, 596, 2711, 1138, 1825, 632, 2787, 2178, 1795, 1491, 309, 2638, 1140, 2874, 1517, 1662, 1464, 2609, 1210, 2376, 3462 },
			{ 2283, 2680, 2480, 484, 271, 200, 452, 1653, 1003, 843, 2004, 26, 1258, 960, 1663, 2182, 1937, 371, 241, 625, 0, 2043, 996, 2342, 380, 172, 581, 241, 310, 331, 375, 2506, 631, 1684, 199, 2242, 2087, 1598, 948, 337, 2164, 723, 2661, 1322, 1526, 849, 2403, 1016, 2271, 3221 },
			{ 626, 659, 759, 1801, 1786, 2243, 2224, 1083, 1040, 2767, 39, 2059, 836, 1167, 1013, 407, 508, 2133, 2212, 2327, 2043, 0, 2633, 428, 2387, 2141, 2087, 1812, 2325, 2375, 1779, 536, 1466, 646, 1867, 1393, 703, 572, 2513, 2247, 905, 1325, 661, 821, 760, 1723, 452, 1117, 693, 1180 },
			{ 2650, 3183, 2827, 878, 1199, 947, 1360, 1836, 1687, 466, 2598, 970, 1801, 1474, 1881, 2885, 2347, 650, 1111, 381, 996, 2633, 0, 2810, 727, 826, 1551, 1171, 776, 901, 965, 2981, 1516, 2088, 1014, 3164, 2408, 2082, 1801, 664, 3000, 1507, 3144, 1813, 1929, 1842, 2880, 1521, 2608, 3738 },
			{ 303, 376, 356, 2035, 2101, 2543, 2573, 1067, 1354, 3002, 458, 2356, 1086, 1406, 1002, 742, 468, 2378, 2532, 2541, 2342, 428, 2810, 0, 2661, 2419, 2455, 2124, 2605, 2671, 2039, 170, 1811, 722, 2154, 1779, 512, 753, 2895, 2506, 1279, 1649, 333, 1035, 881, 2118, 71, 1350, 386, 927 },
			{ 2575, 3010, 2769, 658, 649, 240, 639, 1875, 1350, 470, 2348, 356, 1575, 1256, 1896, 2549, 2235, 337, 397, 432, 380, 2387, 727, 2661, 0, 246, 845, 618, 71, 174, 623, 2827, 1010, 1974, 522, 2617, 2363, 1909, 1075, 183, 2544, 1086, 2986, 1627, 1812, 1197, 2724, 1312, 2554, 3557 },
			{ 2340, 2766, 2535, 451, 418, 196, 577, 1664, 1103, 685, 2102, 145, 1333, 1017, 1681, 2303, 1998, 224, 331, 459, 172, 2141, 826, 2419, 246, 0, 737, 387, 185, 278, 388, 2585, 776, 1739, 276, 2404, 2133, 1668, 1064, 165, 2311, 841, 2743, 1388, 1578, 1021, 2482, 1074, 2322, 3312 },
			{ 2467, 2746, 2663, 1002, 544, 608, 232, 1995, 1131, 1297, 2048, 604, 1444, 1238, 1986, 2116, 2122, 952, 447, 1195, 581, 2087, 1551, 2455, 845, 737, 0, 549, 783, 690, 864, 2602, 661, 1900, 683, 1907, 2314, 1772, 467, 890, 1955, 848, 2744, 1534, 1763, 450, 2505, 1285, 2474, 3253 },
			{ 2081, 2455, 2279, 460, 31, 434, 519, 1503, 775, 1072, 1773, 263, 1047, 771, 1504, 1943, 1734, 521, 409, 789, 241, 1812, 1171, 2124, 618, 387, 549, 0, 549, 567, 319, 2285, 391, 1487, 163, 2019, 1896, 1389, 989, 543, 1926, 488, 2439, 1119, 1334, 684, 2183, 826, 2075, 2992 },
			{ 2524, 2952, 2719, 618, 580, 175, 584, 1837, 1287, 540, 2287, 286, 1519, 1202, 1855, 2483, 2183, 318, 337, 458, 310, 2325, 776, 2605, 71, 185, 783, 549, 0, 144, 571, 2771, 941, 1923, 459, 2546, 2315, 1854, 1035, 171, 2474, 1020, 2929, 1573, 1762, 1128, 2668, 1259, 2505, 3498 },
			{ 2604, 3011, 2801, 729, 596, 133, 473, 1942, 1334, 607, 2335, 316, 1585, 1279, 1957, 2510, 2260, 456, 249, 600, 331, 2375, 901, 2671, 174, 278, 690, 567, 144, 0, 661, 2835, 950, 2004, 517, 2514, 2402, 1924, 900, 314, 2470, 1054, 2991, 1646, 1844, 1071, 2732, 1336, 2589, 3552 },
			{ 1953, 2392, 2148, 142, 331, 551, 799, 1284, 759, 992, 1741, 374, 956, 633, 1297, 1973, 1612, 359, 616, 596, 375, 1779, 965, 2039, 623, 388, 864, 319, 571, 661, 0, 2207, 561, 1352, 190, 2201, 1744, 1287, 1287, 468, 2041, 544, 2366, 1005, 1191, 974, 2104, 690, 1934, 2941 },
			{ 419, 211, 391, 2204, 2261, 2706, 2726, 1227, 1512, 3172, 571, 2519, 1252, 1574, 1163, 773, 636, 2547, 2692, 2711, 2506, 536, 2981, 170, 2827, 2585, 2602, 2285, 2771, 2835, 2207, 0, 1964, 893, 2319, 1813, 656, 921, 3038, 2674, 1310, 1807, 163, 1203, 1052, 2254, 103, 1518, 499, 758 },
			{ 1808, 2121, 2005, 682, 360, 817, 762, 1361, 470, 1460, 1427, 654, 782, 605, 1344, 1564, 1462, 875, 755, 1138, 631, 1466, 1516, 1811, 1010, 776, 661, 391, 941, 950, 561, 1964, 0, 1238, 516, 1649, 1652, 1111, 1125, 925, 1535, 192, 2112, 873, 1103, 503, 1864, 646, 1813, 2646 },
			{ 600, 1097, 796, 1331, 1468, 1882, 1976, 444, 771, 2291, 624, 1694, 456, 724, 376, 1026, 263, 1675, 1894, 1825, 1684, 646, 2088, 722, 1974, 1739, 1900, 1487, 1923, 2004, 1352, 893, 1238, 0, 1488, 1857, 414, 172, 2363, 1811, 1429, 1053, 1056, 369, 163, 1649, 793, 668, 588, 1650 },
			{ 2088, 2497, 2285, 320, 188, 393, 608, 1455, 828, 950, 1828, 205, 1068, 764, 1464, 2027, 1743, 365, 432, 632, 199, 1867, 1014, 2154, 522, 276, 683, 163, 459, 517, 190, 2319, 516, 1488, 0, 2162, 1890, 1407, 1098, 411, 2045, 565, 2476, 1129, 1330, 847, 2216, 820, 2075, 3041 },
			{ 2019, 1803, 2134, 2305, 1989, 2392, 2132, 2273, 1581, 3085, 1381, 2268, 1681, 1873, 2212, 1041, 1850, 2524, 2273, 2787, 2242, 1393, 3164, 1779, 2617, 2404, 1907, 2019, 2546, 2514, 2201, 1813, 1649, 1857, 2162, 0, 2075, 1697, 2132, 2563, 502, 1670, 1853, 1752, 1872, 1462, 1772, 1859, 2087, 2058 },
			{ 251, 865, 419, 1710, 1878, 2283, 2390, 590, 1184, 2652, 704, 2096, 870, 1128, 534, 1107, 236, 2052, 2303, 2178, 2087, 703, 2408, 512, 2363, 2133, 2314, 1896, 2315, 2402, 1744, 656, 1652, 414, 1890, 2075, 0, 553, 2776, 2193, 1601, 1467, 805, 783, 562, 2053, 579, 1072, 200, 1387 },
			{ 697, 1112, 895, 1283, 1367, 1798, 1862, 581, 641, 2252, 543, 1610, 341, 653, 516, 918, 350, 1625, 1798, 1795, 1598, 572, 2082, 753, 1909, 1668, 1772, 1389, 1854, 1924, 1287, 921, 1111, 172, 1407, 1697, 553, 0, 2230, 1753, 1283, 933, 1082, 282, 196, 1499, 818, 597, 702, 1666 },
			{ 2922, 3172, 3118, 1417, 991, 884, 495, 2461, 1592, 1448, 2474, 963, 1907, 1705, 2453, 2502, 2580, 1288, 732, 1491, 948, 2513, 1801, 2895, 1075, 1064, 467, 989, 1035, 900, 1287, 3038, 1125, 2363, 1098, 2132, 2776, 2230, 0, 1185, 2271, 1314, 3174, 1999, 2228, 798, 2942, 1753, 2933, 3662 },
			{ 2409, 2860, 2602, 484, 574, 301, 713, 1696, 1219, 538, 2208, 310, 1425, 1099, 1719, 2428, 2072, 154, 461, 309, 337, 2247, 664, 2506, 183, 165, 890, 543, 171, 314, 468, 2674, 925, 1811, 411, 2563, 2193, 1753, 1185, 0, 2457, 972, 2834, 1471, 1648, 1186, 2571, 1155, 2387, 3410 },
			{ 1527, 1306, 1634, 2122, 1895, 2340, 2158, 1864, 1328, 2994, 898, 2188, 1342, 1595, 1799, 538, 1385, 2390, 2248, 2638, 2164, 905, 3000, 1279, 2544, 2311, 1955, 1926, 2474, 2470, 2041, 1310, 1535, 1429, 2045, 502, 1601, 1283, 2271, 2457, 0, 1497, 1354, 1395, 1472, 1508, 1270, 1568, 1597, 1604 },
			{ 1630, 1972, 1828, 636, 461, 921, 929, 1169, 296, 1511, 1286, 742, 598, 417, 1152, 1462, 1283, 893, 887, 1140, 723, 1325, 1507, 1649, 1086, 841, 848, 488, 1020, 1054, 544, 1807, 192, 1053, 565, 1670, 1467, 933, 1314, 972, 1497, 0, 1958, 685, 914, 680, 1706, 455, 1633, 2506 },
			{ 560, 75, 485, 2366, 2415, 2862, 2873, 1384, 1665, 3334, 699, 2676, 1410, 1734, 1321, 831, 799, 2708, 2845, 2874, 2661, 661, 3144, 333, 2986, 2743, 2744, 2439, 2929, 2991, 2366, 163, 2112, 1056, 2476, 1853, 805, 1082, 3174, 2834, 1354, 1958, 0, 1364, 1215, 2385, 264, 1679, 634, 595 },
			{ 962, 1393, 1159, 1002, 1100, 1521, 1607, 572, 413, 1971, 787, 1333, 101, 371, 530, 1116, 615, 1343, 1528, 1517, 1322, 821, 1813, 1035, 1627, 1388, 1534, 1119, 1573, 1646, 1005, 1203, 873, 369, 1129, 1752, 783, 282, 1999, 1471, 1395, 685, 1364, 0, 231, 1306, 1100, 315, 955, 1946 },
			{ 762, 1253, 957, 1168, 1316, 1723, 1830, 401, 644, 2128, 733, 1535, 329, 566, 343, 1114, 426, 1512, 1740, 1662, 1526, 760, 1929, 881, 1812, 1578, 1763, 1334, 1762, 1844, 1191, 1052, 1103, 163, 1330, 1872, 562, 196, 2228, 1648, 1472, 914, 1215, 231, 0, 1535, 951, 510, 745, 1808 },
			{ 2172, 2380, 2363, 1113, 660, 960, 669, 1836, 894, 1667, 1685, 876, 1206, 1095, 1812, 1704, 1840, 1197, 823, 1464, 849, 1723, 1842, 2118, 1197, 1021, 450, 684, 1128, 1071, 974, 2254, 503, 1649, 847, 1462, 2053, 1499, 798, 1186, 1508, 680, 2385, 1306, 1535, 0, 2161, 1129, 2192, 2864 },
			{ 359, 304, 380, 2101, 2159, 2604, 2626, 1138, 1411, 3069, 486, 2417, 1149, 1471, 1073, 731, 539, 2444, 2590, 2609, 2403, 452, 2880, 71, 2724, 2482, 2505, 2183, 2668, 2732, 2104, 103, 1864, 793, 2216, 1772, 579, 818, 2942, 2571, 1270, 1706, 264, 1100, 951, 2161, 0, 1415, 442, 857 },
			{ 1268, 1707, 1464, 689, 810, 1214, 1331, 715, 297, 1658, 1080, 1026, 281, 56, 701, 1370, 924, 1029, 1231, 1210, 1016, 1117, 1521, 1350, 1312, 1074, 1285, 826, 1259, 1336, 690, 1518, 646, 668, 820, 1859, 1072, 597, 1753, 1155, 1568, 455, 1679, 315, 510, 1129, 1415, 0, 1255, 2259 },
			{ 83, 701, 219, 1904, 2055, 2469, 2560, 787, 1343, 2850, 706, 2281, 1035, 1311, 732, 1077, 353, 2247, 2483, 2376, 2271, 693, 2608, 386, 2554, 2322, 2474, 2075, 2505, 2589, 1934, 499, 1813, 588, 2075, 2087, 200, 702, 2933, 2387, 1597, 1633, 634, 955, 745, 2192, 442, 1255, 0, 1202 },
			{ 1136, 555, 1013, 2948, 2966, 3421, 3400, 1974, 2218, 3918, 1220, 3236, 1985, 2314, 1913, 1181, 1395, 3288, 3392, 3462, 3221, 1180, 3738, 927, 3557, 3312, 3253, 2992, 3498, 3552, 2941, 758, 2646, 1650, 3041, 2058, 1387, 1666, 3662, 3410, 1604, 2506, 595, 1946, 1808, 2864, 857, 2259, 1202, 0 }
		},

		Santas = new[]
		{
			new Santa { Id = 0 },
			new Santa { Id = 1 },
			new Santa { Id = 2 },
			new Santa { Id = 3 },
			new Santa { Id = 4 }
		},

		Visits = new[]
		{
			new Visit{Duration = 1663, Id=0,WayCostFromHome=739, WayCostToHome=739,Unavailable =new [] {(24 * Hour + 9350.66145654325, (24 * Hour + 9350.66145654325) + 19563.7257683425)},Desired = new [] {(0 * Hour + 1236.34079399566, (0 * Hour + 1236.34079399566) + 20641.6948369535)}},
			new Visit{Duration = 1727, Id=1,WayCostFromHome=1257, WayCostToHome=1257,Unavailable =new [] {(24 * Hour + 9486.30946893031, (24 * Hour + 9486.30946893031) + 13716.0222317237)},Desired = new [] {(0 * Hour + 165.306023579983, (0 * Hour + 165.306023579983) + 21739.4296439436)}},
			new Visit{Duration = 1472, Id=2,WayCostFromHome=931, WayCostToHome=931,Unavailable =new [] {(24 * Hour + 495.875821472898, (24 * Hour + 495.875821472898) + 31799.1306186054)},Desired = new [] {(0 * Hour + 1531.34730288525, (0 * Hour + 1531.34730288525) + 25996.280983111)}},
			new Visit{Duration = 3176, Id=3,WayCostFromHome=1189, WayCostToHome=1189,Unavailable =new [] {(24 * Hour + 25095.2947211796, (24 * Hour + 25095.2947211796) + 4354.18743933094)},Desired = new [] {(0 * Hour + 4450.10337760211, (0 * Hour + 4450.10337760211) + 26199.5318681074)}},
			new Visit{Duration = 2106, Id=4,WayCostFromHome=1359, WayCostToHome=1359,Unavailable =new [] {(24 * Hour + 3498.50340678989, (24 * Hour + 3498.50340678989) + 4559.99440539535)},Desired = new [] {(0 * Hour + 13079.7948946083, (0 * Hour + 13079.7948946083) + 17085.7477248124)}},
			new Visit{Duration = 2628, Id=5,WayCostFromHome=1757, WayCostToHome=1757,Unavailable =new [] {(24 * Hour + 19267.6497958672, (24 * Hour + 19267.6497958672) + 8810.56294404462)},Desired = new [] {(0 * Hour + 6022.78518185706, (0 * Hour + 6022.78518185706) + 10087.3327351079)}},
			new Visit{Duration = 1568, Id=6,WayCostFromHome=1877, WayCostToHome=1877,Unavailable =new [] {(24 * Hour + 9358.7432816947, (24 * Hour + 9358.7432816947) + 21932.8576481402)},Desired = new [] {(0 * Hour + 490.094613816324, (0 * Hour + 490.094613816324) + 24017.3843677721)}},
			new Visit{Duration = 1666, Id=7,WayCostFromHome=335, WayCostToHome=335,Unavailable =new [] {(24 * Hour + 4320.93717064369, (24 * Hour + 4320.93717064369) + 18507.3273536569)},Desired = new [] {(0 * Hour + 6726.25470036061, (0 * Hour + 6726.25470036061) + 20772.0994275883)}},
			new Visit{Duration = 1438, Id=8,WayCostFromHome=705, WayCostToHome=705,Unavailable =new [] {(24 * Hour + 12483.9455567555, (24 * Hour + 12483.9455567555) + 18940.7787254112)},Desired = new [] {(0 * Hour + 4143.23861075532, (0 * Hour + 4143.23861075532) + 18276.2548219097)}},
			new Visit{Duration = 3424, Id=9,WayCostFromHome=2143, WayCostToHome=2143,Unavailable =new [] {(24 * Hour + 7002.86233862391, (24 * Hour + 7002.86233862391) + 3617.83168862845)},Desired = new [] {(0 * Hour + 4287.38681149864, (0 * Hour + 4287.38681149864) + 10318.5286747136)}},
			new Visit{Duration = 1883, Id=10,WayCostFromHome=770, WayCostToHome=770,Unavailable =new [] {(24 * Hour + 489.930358361934, (24 * Hour + 489.930358361934) + 31809.0552883614)},Desired = new [] {(0 * Hour + 1886.65442565831, (0 * Hour + 1886.65442565831) + 30279.5327522473)}},
			new Visit{Duration = 2598, Id=11,WayCostFromHome=1570, WayCostToHome=1570,Unavailable =new (int from, int to)[0],Desired = new [] {(0 * Hour + 8934.18381173287, (0 * Hour + 8934.18381173287) + 22132.806180864)}},
			new Visit{Duration = 2368, Id=12,WayCostFromHome=392, WayCostToHome=392,Unavailable =new (int from, int to)[0],Desired = new [] {(0 * Hour + 6136.15994902183, (0 * Hour + 6136.15994902183) + 17542.6858842255)}},
			new Visit{Duration = 2784, Id=13,WayCostFromHome=604, WayCostToHome=604,Unavailable =new (int from, int to)[0],Desired = new [] {(0 * Hour + 13918.6228788254, (0 * Hour + 13918.6228788254) + 16259.4214630217)}},
			new Visit{Duration = 2527, Id=14,WayCostFromHome=275, WayCostToHome=275,Unavailable =new (int from, int to)[0],Desired = new [] {(0 * Hour + 20198.1352581671, (0 * Hour + 20198.1352581671) + 11810.3776027678)}},
			new Visit{Duration = 2044, Id=15,WayCostFromHome=1161, WayCostToHome=1161,Unavailable =new [] {(0 * Hour + 5548.49424263961, (0 * Hour + 5548.49424263961) + 16434.3800605211)},Desired = new [] {(24 * Hour + 10327.8773773454, (24 * Hour + 10327.8773773454) + 3022.98969883425)}},
			new Visit{Duration = 3495, Id=16,WayCostFromHome=417, WayCostToHome=417,Unavailable =new [] {(0 * Hour + 17163.1839684677, (0 * Hour + 17163.1839684677) + 3504.72390448429)},Desired = new [] {(24 * Hour + 2268.65521088242, (24 * Hour + 2268.65521088242) + 29436.7316057169)}},
			new Visit{Duration = 2937, Id=17,WayCostFromHome=1533, WayCostToHome=1533,Unavailable =new [] {(0 * Hour + 720.016680917587, (0 * Hour + 720.016680917587) + 29043.1114221532)},Desired = new [] {(24 * Hour + 9440.28417855547, (24 * Hour + 9440.28417855547) + 13396.2433098863)}},
			new Visit{Duration = 2513, Id=18,WayCostFromHome=1780, WayCostToHome=1780,Unavailable =new [] {(0 * Hour + 10619.3701579482, (0 * Hour + 10619.3701579482) + 10924.0318331532)},Desired = new [] {(24 * Hour + 6180.07130534515, (24 * Hour + 6180.07130534515) + 23169.8032509809)}},
			new Visit{Duration = 2583, Id=19,WayCostFromHome=1673, WayCostToHome=1673,Unavailable =new [] {(0 * Hour + 3072.68832500259, (0 * Hour + 3072.68832500259) + 22168.5114182259)},Desired = new [] {(24 * Hour + 2850.18838747717, (24 * Hour + 2850.18838747717) + 7127.28095878813)}},
			new Visit{Duration = 2756, Id=20,WayCostFromHome=1562, WayCostToHome=1562,Unavailable =new [] {(0 * Hour + 8608.64278634147, (0 * Hour + 8608.64278634147) + 8541.00868630084)},Desired = new [] {(24 * Hour + 3789.39525637731, (24 * Hour + 3789.39525637731) + 27876.431194626)}},
			new Visit{Duration = 1701, Id=21,WayCostFromHome=794, WayCostToHome=794,Unavailable =new [] {(0 * Hour + 22089.7636201268, (0 * Hour + 22089.7636201268) + 6652.9023139467)},Desired = new [] {(24 * Hour + 8260.33000808975, (24 * Hour + 8260.33000808975) + 10581.9495449671)}},
			new Visit{Duration = 2665, Id=22,WayCostFromHome=1929, WayCostToHome=1929,Unavailable =new [] {(0 * Hour + 12664.2130974613, (0 * Hour + 12664.2130974613) + 15721.6990311219)},Desired = new [] {(24 * Hour + 3288.37898764686, (24 * Hour + 3288.37898764686) + 19113.8579108444)}},
			new Visit{Duration = 2690, Id=23,WayCostFromHome=882, WayCostToHome=882,Unavailable =new [] {(0 * Hour + 4119.96015092568, (0 * Hour + 4119.96015092568) + 10972.3297162644)},Desired = new [] {(24 * Hour + 12335.7257561562, (24 * Hour + 12335.7257561562) + 10643.2703182629)}},
			new Visit{Duration = 2679, Id=24,WayCostFromHome=1839, WayCostToHome=1839,Unavailable =new [] {(0 * Hour + 13616.6826089028, (0 * Hour + 13616.6826089028) + 3572.29364948408)},Desired = new [] {(24 * Hour + 1169.56579821504, (24 * Hour + 1169.56579821504) + 27029.3793994283)}},
			new Visit{Duration = 2680, Id=25,WayCostFromHome=1608, WayCostToHome=1608,Unavailable =new [] {(0 * Hour + 1439.82617283756, (0 * Hour + 1439.82617283756) + 29080.5647791552)},Desired = new [] {(24 * Hour + 9888.33630499352, (24 * Hour + 9888.33630499352) + 8440.5021827484)}},
			new Visit{Duration = 2581, Id=26,WayCostFromHome=1816, WayCostToHome=1816,Unavailable =new (int from, int to)[0],Desired = new [] {(24 * Hour + 22761.8492797759, (24 * Hour + 22761.8492797759) + 2690.46468159531)}},
			new Visit{Duration = 3549, Id=27,WayCostFromHome=1376, WayCostToHome=1376,Unavailable =new (int from, int to)[0],Desired = new [] {(24 * Hour + 24522.685777238, (24 * Hour + 24522.685777238) + 7527.53692708748)}},
			new Visit{Duration = 3556, Id=28,WayCostFromHome=1790, WayCostToHome=1790,Unavailable =new (int from, int to)[0],Desired = new [] {(24 * Hour + 128.196621678653, (24 * Hour + 128.196621678653) + 20537.6239697103)}},
			new Visit{Duration = 3161, Id=29,WayCostFromHome=1876, WayCostToHome=1876,Unavailable =new (int from, int to)[0],Desired = new [] {(24 * Hour + 7398.72171901049, (24 * Hour + 7398.72171901049) + 10780.6921219587)}},
			new Visit{Duration = 3521, Id=30,WayCostFromHome=1219, WayCostToHome=1219,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1631, Id=31,WayCostFromHome=1052, WayCostToHome=1052,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1385, Id=32,WayCostFromHome=1158, WayCostToHome=1158,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2018, Id=33,WayCostFromHome=161, WayCostToHome=161,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2978, Id=34,WayCostFromHome=1364, WayCostToHome=1364,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2828, Id=35,WayCostFromHome=1937, WayCostToHome=1937,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2646, Id=36,WayCostFromHome=525, WayCostToHome=525,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1743, Id=37,WayCostFromHome=249, WayCostToHome=249,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 3436, Id=38,WayCostFromHome=2282, WayCostToHome=2282,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2073, Id=39,WayCostFromHome=1671, WayCostToHome=1671,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1930, Id=40,WayCostFromHome=1532, WayCostToHome=1532,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2896, Id=41,WayCostFromHome=968, WayCostToHome=968,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 3286, Id=42,WayCostFromHome=1215, WayCostToHome=1215,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2411, Id=43,WayCostFromHome=292, WayCostToHome=292,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1782, Id=44,WayCostFromHome=70, WayCostToHome=70,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1667, Id=45,WayCostFromHome=1598, WayCostToHome=1598,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1595, Id=46,WayCostFromHome=953, WayCostToHome=953,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 3328, Id=47,WayCostFromHome=549, WayCostToHome=549,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 2454, Id=48,WayCostFromHome=715, WayCostToHome=715,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]},
			new Visit{Duration = 1860, Id=49,WayCostFromHome=1810, WayCostToHome=1810,Unavailable =new (int from, int to)[0],Desired = new (int from, int to)[0]}
		}
	};
	return (input, coordinates);
}
}
}
