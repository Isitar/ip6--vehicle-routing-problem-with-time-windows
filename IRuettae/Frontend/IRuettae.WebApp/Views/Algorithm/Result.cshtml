@using System.Drawing
@model IEnumerable<IRuettae.WebApp.Models.RouteCalculationWaypointVM[]>

@section styles
{
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.4/dist/leaflet.css"
          integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
          crossorigin="" />

    <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />
}



@{

    int counter = 0;
    <h1>Routen</h1>
    @*<div id="allMap" style="min-height: 300px;"></div>*@

    foreach (var route in Model.Where(m => m != null))
    {
        var letterMap = 'A';

        <h2>Route @route[0].SantaName @route[0].VisitStartTime.Date.ToShortDateString()</h2>
        <div id="map-@counter" style="min-height: 300px"></div>
        <table class="table">
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(m => m[0].VisitStartTime)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m[0].VisitEndTime)
                </th>
                <th>
                    @Html.DisplayNameFor(m => m[0].Visit)
                </th>
            </tr>
            @foreach (var item in route)
            {
                <tr>
                    <td>@letterMap</td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VisitStartTime.TimeOfDay)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.VisitEndTime.TimeOfDay)
                    </td>
                    <td>
                        @{
                            var text = $"{item.Visit}";
                        }
                        @text
                    </td>
                </tr>
                {
                    letterMap++;
                }
            }
        </table>


        counter++;

    }
}




@section scripts
{
    <script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"
            integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA=="
            crossorigin=""></script>
    <script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>
    @{counter = 0;}
    @foreach (var route in Model.Where(m => m != null))
    {
        <script>
            function renderMap@(counter)() {
                @{ var startVisit = route.First().Visit; }

                var map = L.map('map-@counter').setView([@startVisit.Lat, @startVisit.Long], 13);
                L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={accessToken}',
                    {
                        attribution:
                            'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
                        maxZoom: 18,
                        id: 'mapbox.streets',
                        accessToken: '@Environment.GetEnvironmentVariable("mapbox-key")',
                    }).addTo(map);

                var latlngArray = [];
                @{ var letter = 'A'; }

                @foreach (var waypoint in route)
                {
                    @:var marker@(letter) = L.marker([@waypoint.Visit.Lat, @waypoint.Visit.Long], { title: '@letter', draggable: false, alt: '@letter' }).addTo(map);
                    @:marker@(letter).bindTooltip('@letter', { permanent: true });

                    @:latlngArray.push(L.latLng(@waypoint.Visit.Lat, @waypoint.Visit.Long));
                    letter++;
                }

                L.Routing.control({
                    waypoints: latlngArray,
                    show: false,
                    waypointMode: 'snap',
                    router: L.Routing.mapbox('@Environment.GetEnvironmentVariable("mapbox-key")', {profile:'mapbox/walking'}),
                }).addTo(map);
            }
        </script>

        counter++;
    }

    <script>
        document.addEventListener("DOMContentLoaded",
            function(event) {
                @for (var i = 0; i < counter; i++)
                {
                    @Html.Raw($"renderMap{i}();{Environment.NewLine}");
                }

            });

    </script>
}


